[{"/Users/qianziyu/Documents/GitHub/IT-project/front/src/index.js":"1","/Users/qianziyu/Documents/GitHub/IT-project/front/src/router.js":"2","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/dashboard.js":"3","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/homepage.js":"4","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/register.js":"5","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/search.js":"6","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/contact.js":"7","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/editinfo.js":"8","/Users/qianziyu/Documents/GitHub/IT-project/front/src/commons/axios.js":"9","/Users/qianziyu/Documents/GitHub/IT-project/front/src/components/contactPendingBrief.js":"10","/Users/qianziyu/Documents/GitHub/IT-project/front/src/components/contactAcceptBrief.js":"11","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/login.js":"12"},{"size":187,"mtime":1633225951463,"results":"13","hashOfConfig":"14"},{"size":1223,"mtime":1633249062235,"results":"15","hashOfConfig":"14"},{"size":6635,"mtime":1633225951464,"results":"16","hashOfConfig":"14"},{"size":2407,"mtime":1633247827170,"results":"17","hashOfConfig":"14"},{"size":8551,"mtime":1633225951465,"results":"18","hashOfConfig":"14"},{"size":13856,"mtime":1633226105873,"results":"19","hashOfConfig":"14"},{"size":8907,"mtime":1633225951463,"results":"20","hashOfConfig":"14"},{"size":23878,"mtime":1633225951464,"results":"21","hashOfConfig":"14"},{"size":426,"mtime":1633225951462,"results":"22","hashOfConfig":"14"},{"size":2927,"mtime":1633226305115,"results":"23","hashOfConfig":"14"},{"size":9285,"mtime":1633225961960,"results":"24","hashOfConfig":"14"},{"size":8118,"mtime":1633247959829,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ex311u",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/qianziyu/Documents/GitHub/IT-project/front/src/index.js",[],["53","54"],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/router.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/dashboard.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/homepage.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/register.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/search.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/contact.js",["55"],"import React from 'react'\nimport {useState,useEffect} from 'react'\nimport axios from '../commons/axios.js'\nimport ContactPendingBrief from '../components/contactPendingBrief.js'\nimport ContactBrief from '../components/contactAcceptBrief.js'\nimport { Menu,Badge,Typography } from 'antd';\nimport { UserOutlined,UserAddOutlined} from '@ant-design/icons';\nimport { Layout, Dropdown } from 'antd';\nimport { Row, Col, Space, Spin } from 'antd';\nimport Cookies from 'universal-cookie';\nimport { Avatar } from 'antd';\n\n\n\nexport default function Contact(props){\n    const { Text } = Typography;\n    const { SubMenu } = Menu;\n    const [ acceptContact, setAcceptContacts] = useState([]);\n    const [ pendingContact, setPendingContact] = useState([]);\n    const [ length,setLength ]= useState('');\n    const { Header, Content, Sider } = Layout;\n    const [ detailLoading, setDetailLoading ] = useState(true);\n    const [ profileLoading, setProfileLoading ] = useState(true);\n    const [ Detail, setDetail] = useState([]);\n    const id = props.match.params._id;\n    const home = \"/dashboard/\" + id;\n    const [ profile,setProfile ]= useState([]);\n    \n\n    useEffect(()=>{\n        const id = props.match.params._id;\n        const home = \"/dashboard/\" + id;\n        // connect contact back-end and seting contact list information\n        axios.get(home +'/contact').then(response=>{\n            if(response.data.success){\n                setAcceptContacts(response.data.accepted)\n                setPendingContact(response.data.pending)\n                setLength(response.data.pending.length)\n                setDetailLoading(false)\n            }\n        }).catch(error=>{\n        })\n        \n        axios.get(home).then(response=>{\n            if(response.data.success){\n                setProfile(response.data.user);\n                setProfileLoading(false);\n            }\n        }).catch(error=>{\n        })\n        \n    },[])\n\n    // logout function\n    const OnLogOut = () => { \n        const logout = '/' + id + '/logout';\n        axios.get(logout).then(response => {\n            if (response.data.success) {\n                const cookies = new Cookies();\n                cookies.remove('token');\n                cookies.remove('connect.sid')\n                props.history.push('/signin');\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n    }\n\n    //render logout\n    const logout = (\n        <Menu>\n            <Menu.Item key=\"1\" onClick = {OnLogOut}>Log Out</Menu.Item>\n        </Menu>\n    );\n\n    // separate each contact list with index\n    const renderContact = acceptContact.map((contact,index)=>{\n        if (Detail.id === undefined){\n            return (<> </>)\n        }\n\n        if (contact.friend._id === Detail.id){\n            console.log(Detail.id)\n            return (\n                <ContactBrief\n                    key ={index}\n                    contact = {contact}/> \n            )\n            \n        }\n        return (<> </>)\n    })\n    // loading page if waiting \n    if (detailLoading || profileLoading) {\n        return <Space size=\"middle\" style={{ position: 'relative', marginLeft: '50vw', marginTop: '50vh' }}>\n            <Spin size=\"large\" />\n            <h3>Loading</h3>\n        </Space>;\n    } \n    else {\n        // render contact page\n        return(\n            <Layout>\n                <Header style={{ padding: '0 10px' }}>\n                    <Row style={{ height: \"64px\" }}>\n                        <Col span={2} offset={1}>\n                            <a href={home}>\n                                <div>\n                                    <img src='/../pics/logo_bee.png' alt='logo_bee' style={{ height: '64px', padding: '6px' }} />\n                                </div>\n                            </a>\n                        </Col>\n                        <Col span={7} offset={2}>\n                            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} style={{ height: '64px' }}>\n                                <Menu.Item key=\"1\">\n                                    <a href={home}>\n                                        <img src='/../pics/user_icon.png' alt='profile_icon' style={{ height: '24px', verticalAlign: 'middle' }} />\n                                        <span style={{ verticalAlign: 'middle', paddingLeft: '10px' }}>Profile</span>\n                                    </a>\n                                </Menu.Item>\n                                \n                                <Menu.Item key=\"2\">\n                                    <a href={home+'/contact'}>\n                                        <img src='/../pics/contact_icon.png' alt='contact_icon' style={{ height: '24px' }} />\n                                        <span style={{ verticalAlign: 'middle', paddingLeft: '10px' }}>Contact</span>\n                                    </a>\n                                </Menu.Item>\n\n                                <Menu.Item key=\"3\">\n                                    <a href={home + '/search'}>\n                                        <img src='/../pics/AddFriend.png' alt='AddFriend' style={{ height: '19px' }} />\n                                        <span style={{ verticalAlign: 'middle', paddingLeft: '10px' }}>Search</span>\n                                    </a>\n                                </Menu.Item>\n\n                            </Menu>\n                        </Col>\n                        \n                        <Col span={7} offset={1}>\n                            <Menu theme=\"dark\" mode=\"horizontal\" style={{ height: '64px' }}>\n                                <Dropdown overlay={logout}>\n                                    <Menu.Item key=\"1\">\n                                        <Avatar src={profile.photo.data} />\n                                        <span style={{ color: 'white', verticalAlign: 'middle', paddingLeft: '10px'}}>\n                                            {profile.email}\n                                        </span>\n                                    </Menu.Item>\n                                </Dropdown>\n                            </Menu>\n                        </Col>\n                    </Row>\n                </Header>\n                <Layout  style={{ padding: '2vh 2vh', paddingRight:'2vh', backgroundImage:'url(\"/../pics/background1.jpg\")'}}>\n                    <Sider width={'20vw'} style = {{background: '#fff'}}>\n                        <Menu \n                            mode=\"inline\"\n                            style={{minHeight: '100vh'}}\n                        >   \n                                <SubMenu key=\"sub1\" icon={<Badge count={length} size=\"small\" offset={[2,-1]}> \n                                                        <UserAddOutlined/> \n                                                        </Badge>} title=\"New friend\" >\n                                    {pendingContact.map((contact, index) => <Menu.Item key = {contact._id} icon = {\n                                        <Avatar icon={<UserOutlined />} />}  style = {{paddingLeft: '20px', height:'100px'}}  > \n                                        <ContactPendingBrief\n                                        key ={contact._id}\n                                        contact = {contact}/>\n                                    </Menu.Item>)}\n                                    \n                                </SubMenu>\n                                <SubMenu key=\"sub2\" icon={<UserOutlined/>} title=\"My friend\">\n                                    {acceptContact.map((contact, index) => <Menu.Item key = {index} icon = {\n                                        <Avatar icon={<UserOutlined />}/>\n                                    } style = {{paddingLeft: '20px'}}> \n                                        <div \n                                        onClick={e => setDetail(e.target)} \n                                        id = {contact.friend._id}\n                                        >\n                                            {contact.friend.givenName}\n                                        <Text \n                                        type=\"secondary\"\n                                        style={{margin:'5px'}}\n                                        >\n                                            {contact.remark}\n                                        </Text>\n                                            \n                                        </div>\n                                    </Menu.Item>)}\n                                </SubMenu>    \n                        </Menu>\n                    </Sider>\n                    <Content style={{minHeight: 280, backgroundColor: 'rgba(255, 255, 255, 0.5)', padding: '2vw 2vw'}}> \n                        {renderContact}\n                    </Content>\n                </Layout>\n            </Layout>\n        )\n    }\n}","/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/editinfo.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/commons/axios.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/components/contactPendingBrief.js",["56"],"import React from 'react'\nimport axios from '../commons/axios.js'\nimport { message, List, Row, Col } from 'antd';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\n\n\n\nexport default class ContactBrief extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    //write friend info\n    handleClick = e => {\n        console.log('click ', e);\n    }\n\n    // connect bacl-end accept friend \n    acceptFriend = () => {\n\n        const userId = this.props.contact.friend\n        console.log(this.props.contact)\n        axios.post('/dashboard/' + userId + '/acceptFriend', {\n            userid: this.props.contact.user._id\n        }).then(response => {\n            if (response.data.success) {\n                message.success('Accept successfully')\n                this.props.push('/dashboard/' + userId + '/contact')\n            }\n            else {\n                message.error(response.data.error)\n            }\n\n        }).catch(error => {\n            message.error(error.response.data.error)\n        })\n\n    }\n    // connect bacl-end reject friend \n    rejectFriend = () => {\n        const userId = this.props.contact.friend\n\n        axios.post('/dashboard/' + userId + '/deleteFriend', {\n            contactid: this.props.contact._id\n        }).then(response => {\n            if (response.data.success) {\n                message.success('Delete successfully')\n            }\n            else {\n                message.error(response.data.error)\n            }\n            window.location.reload()\n\n        }).catch(error => {\n            message.error(error.response.data.error)\n        })\n\n    }\n\n    render() {\n        // render pending  page\n        return (\n            <Row>\n                <Col span={19} style={{ verticalAlign: 'middle', display: 'inline-block' }}>\n\n                    <List.Item style={{ paddingTop: '20px' }}>\n                        <List.Item.Meta\n                            title={this.props.contact.user.givenName + ' ' + this.props.contact.user.familyName}\n                            description={this.props.contact.user.email}\n                        />\n                    </List.Item>\n\n                </Col>\n                <Col span={5}>\n                    <div style={{ height: '50%' }}>\n                        <IconButton\n                            onClick={() => this.acceptFriend()}\n                        >\n                            <AddIcon />\n                        </IconButton>\n                    </div>\n                    <div style={{ height: '50%' }}>\n                        <IconButton\n                            onClick={() => this.rejectFriend()}\n                        >\n                            <DeleteIcon />\n                        </IconButton >\n                    </div>\n                </Col>\n            </Row>\n        )\n\n    }\n}\n","/Users/qianziyu/Documents/GitHub/IT-project/front/src/components/contactAcceptBrief.js",[],"/Users/qianziyu/Documents/GitHub/IT-project/front/src/pages/login.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":52,"column":7,"nodeType":"63","endLine":52,"endColumn":9,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":14,"column":5,"nodeType":"67","messageId":"68","endLine":16,"endColumn":6},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params._id'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [props.match.params._id]",{"range":"74","text":"75"},[1916,1918],"[props.match.params._id]"]